{"version":3,"sources":["../src/functionRegistry.js"],"names":[],"mappings":";;AACA,SAAS,gBAAT,GAA4B;AACxB,QAAI,aAAa,EAAjB;;;;AAIA,aAAS,QAAT,CAAkB,GAAlB,EAAuB,IAAvB,EAA6B;AACzB,mBAAW,GAAX,IAAkB,IAAlB;AACH;;AAED,aAAS,GAAT,CAAa,GAAb,EAAkB;AACd,YAAI,OAAO,WAAW,GAAX,CAAX;AACA,YAAI,IAAJ,EAAU;AACN,mBAAO,IAAP;AACH;AACJ;AACD,aAAS,MAAT,CAAgB,GAAhB,EAAqB;AACjB,YAAI,WAAW,GAAX,CAAJ,EAAqB;AACjB,mBAAO,WAAW,GAAX,CAAP;AACH;AACJ;;AAED,WAAO;AACH,kBAAU,QADP;AAEH,aAAK,GAFF;AAGH,gBAAQ,MAHL;AAIH,oBAAY;AAJT,KAAP;AAMH;;AAED,SAAS,MAAT,CAAgB,YAAhB,EAA8B,IAA9B,EAAoC,OAApC,EAA6C;;;;AAIzC,QAAI,UAAU,OAAO,OAAP,IAAkB,OAAO,eAAP,KAA2B,KAA7C,GAAqD,OAArD,GAA8D,EAA5E;AAAA,QACI,IADJ;;AAGA,QAAG,YAAH,EAAgB;AACZ,eAAO,SAAS,GAAT,CAAa,UAAU,YAAvB,CAAP;AACA,YAAI,IAAJ,EAAS;AACL,mBAAO,KAAK,KAAL,CAAW,IAAX,EAAiB,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,EAAsC,CAAtC,CAAjB,CAAP;AACH;AACJ;AACD,WAAO,IAAP;AACH;;;AAGD,IAAI,WAAW,kBAAf;;AAEA,OAAO,OAAP,GAAiB;AACb,cAAU,SAAS,QADN;AAEb,SAAK,SAAS,GAFD;AAGb,YAAQ,SAAS,MAHJ;AAIb,gBAAY,SAAS,UAJR;AAKb,YAAQ;AALK,CAAjB","file":"functionRegistry.js","sourcesContent":["\r\nfunction functionRegistry() {\r\n    var dictionary = {};\r\n\r\n    // will set the value on an existing observable\r\n\r\n    function register(key, func) {\r\n        dictionary[key] = func;\r\n    }\r\n\r\n    function get(key) {\r\n        var func = dictionary[key];\r\n        if (func) {\r\n            return func;\r\n        }\r\n    }\r\n    function remove(key) {\r\n        if (dictionary[key]) {\r\n            delete dictionary[key];\r\n        }\r\n    }\r\n\r\n    return {\r\n        register: register,\r\n        get: get,\r\n        remove: remove,\r\n        dictionary: dictionary\r\n    };\r\n}\r\n\r\nfunction invoke(functionName, data, options) {\r\n    // IS_MOCK needs to be true in prototype and undefined or false in taskflow to make it Mock\r\n    // if IS_SERVICE_MOCK is false, then dont use mock keyword\r\n    // set IS_SERVICE_MOCK to false explicitly when testing, leave it undefined for IS_MOCK to work as desired in protoype and portal\r\n    var mockKey = window.IS_MOCK && window.IS_SERVICE_MOCK !== false ? 'mock.': '',\r\n        func;\r\n\r\n    if(functionName){\r\n        func = registry.get(mockKey + functionName);\r\n        if (func){\r\n            return func.apply(null, Array.prototype.slice.call(arguments, 1));\r\n        }\r\n    }\r\n    return data;\r\n}\r\n\r\n// create instance\r\nlet registry = functionRegistry();\r\n\r\nmodule.exports = {\r\n    register: registry.register,\r\n    get: registry.get,\r\n    remove: registry.remove,\r\n    dictionary: registry.dictionary,\r\n    invoke: invoke\r\n};\r\n"]}