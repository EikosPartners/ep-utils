{"version":3,"sources":["../src/parseRole.js"],"names":[],"mappings":";;;;AAAA,IAAI,OAAJ;AAAA,IACI,IAAI,QAAQ,QAAR,CADR;AAAA,IAEI,MAAM,QAAQ,aAAR,CAFV;;AAIA,IAAI,WAAW,QAAf;;AAEA,SAAS,KAAT,CAAe,QAAf,EAAyB,SAAzB,EAAoC;AAChC,QAAI,EAAE,OAAF,CAAU,QAAV,CAAJ,EAAyB;AACrB,eAAO,WAAW,QAAX,EAAoB,SAApB,CAAP;AACH,KAFD,MAEO;AACH,eAAO,YAAY,QAAZ,EAAqB,SAArB,CAAP;AACH;AACJ;;AAED,SAAS,WAAT,CAAqB,QAArB,EAA+B,SAA/B,EAA0C;AACtC,QAAI,SAAS,QAAT,CAAJ,EAAwB;AACpB,YAAI,CAAC,UAAU,SAAV,EAAqB,SAAS,QAAT,CAArB,EAAyC,QAAzC,CAAL,EAAyD;AACrD,mBAAO,IAAP;AACH;;AAED,eAAO,SAAS,QAAT,CAAP;AACH;;AAED,SAAK,IAAI,QAAT,IAAqB,QAArB,EAA+B;AAC3B,YAAI,SAAS,cAAT,CAAwB,QAAxB,CAAJ,EAAuC;AACnC,gBAAI,EAAE,OAAF,CAAU,SAAS,QAAT,CAAV,CAAJ,EAAmC;AAC/B,yBAAS,QAAT,IAAqB,WAAW,SAAS,QAAT,CAAX,EAA+B,SAA/B,CAArB;AACH,aAFD,MAGK,IAAK,QAAO,SAAS,QAAT,CAAP,MAA8B,QAA/B,IAA6C,SAAS,QAAT,MAAuB,IAAxE,EAAgF;AACjF,yBAAS,QAAT,IAAqB,YAAY,SAAS,QAAT,CAAZ,EAAgC,SAAhC,CAArB;AACH;;AAED,gBAAI,SAAS,QAAT,MAAuB,IAA3B,EAAiC;AAC7B,uBAAO,SAAS,QAAT,CAAP;AACH;AACJ;AACJ;;AAED,WAAO,QAAP;AACH;;AAED,SAAS,UAAT,CAAoB,QAApB,EAA8B,SAA9B,EAAyC;AACrC,eAAW,EAAE,QAAF,EAAY,GAAZ,CAAgB,UAAU,GAAV,EAAe,KAAf,EAAsB;AAC7C,YAAI,EAAE,OAAF,CAAU,GAAV,CAAJ,EAAoB;AAChB,mBAAO,WAAW,GAAX,EAAgB,SAAhB,CAAP;AACH,SAFD,MAGK,IAAK,QAAO,GAAP,yCAAO,GAAP,OAAe,QAAhB,IAA8B,QAAQ,IAA1C,EAAkD;AACnD,mBAAO,YAAY,GAAZ,EAAiB,SAAjB,CAAP;AACH,SAFI,MAEE;AACH,mBAAO,GAAP;AACH;AACJ,KATU,EASR,MATQ,CASD,UAAU,GAAV,EAAe;AACrB,eAAO,QAAQ,IAAf;AACH,KAXU,EAWR,KAXQ,EAAX;AAYA,WAAO,SAAS,MAAT,KAAoB,CAApB,GAAwB,IAAxB,GAA+B,QAAtC;AACH;;AAED,IAAI,gBAAgB;AAChB,YAAQ,gBAAS,GAAT,EAAc,IAAd,EAAoB;AACxB,UAAE,KAAF,CAAQ,GAAR,EAAa,IAAb;AACH;AAHe,CAApB;;AAMA,SAAS,SAAT,CAAmB,SAAnB,EAA8B,OAA9B,EAAuC,GAAvC,EAA4C;AACxC,QAAI,EAAE,OAAF,CAAU,OAAV,CAAJ,EAAwB;AACpB,eAAO,EAAE,YAAF,CAAe,SAAf,EAA0B,OAA1B,EAAmC,MAAnC,KAA8C,CAArD;AACH;AACD,QAAI,EAAE,YAAF,CAAe,QAAQ,aAAvB,EAAsC,SAAtC,EAAiD,MAAjD,KAA4D,CAAhE,EAAmE;AAC/D,sBAAc,QAAQ,IAAtB,EAA4B,GAA5B,EAAiC,QAAQ,IAAzC;AACH;AACD,WAAO,IAAP;AACH;;AAED,OAAO,OAAP,GAAiB,UAAU;AACvB,WAAO;AADgB,CAA3B","file":"parseRole.js","sourcesContent":["var _module,\n    _ = require('lodash'),\n    fsw = require('./fsWrapper');\n\nvar ROLE_KEY = 'roleid';\n\nfunction parse(metadata, userRoles) {\n    if (_.isArray(metadata)) {\n        return parseArray(metadata,userRoles);\n    } else {\n        return parseObject(metadata,userRoles);\n    }\n}\n\nfunction parseObject(metadata, userRoles) {\n    if (metadata[ROLE_KEY]) {\n        if (!applyRule(userRoles, metadata[ROLE_KEY], metadata)) {\n            return null;\n        }\n\n        delete metadata[ROLE_KEY];\n    }\n\n    for (var property in metadata) {\n        if (metadata.hasOwnProperty(property)) {\n            if (_.isArray(metadata[property])) {\n                metadata[property] = parseArray(metadata[property], userRoles);\n            }\n            else if( (typeof metadata[property] === \"object\") && (metadata[property] !== null) ) {\n                metadata[property] = parseObject(metadata[property], userRoles);\n            }\n\n            if (metadata[property] === null) {\n                delete metadata[property];\n            }\n        }\n    }\n\n    return metadata;\n}\n\nfunction parseArray(metadata, userRoles) {\n    metadata = _(metadata).map(function (obj, index) {\n        if (_.isArray(obj)) {\n            return parseArray(obj, userRoles);\n        }\n        else if( (typeof obj === \"object\") && (obj !== null) ) {\n            return parseObject(obj, userRoles);\n        } else {\n            return obj;\n        }\n    }).filter(function (obj) {\n        return obj !== null;\n    }).value();\n    return metadata.length === 0 ? null : metadata;\n}\n\nvar ruleFunctions = {\n    insert: function(obj, data) {\n        _.merge(obj, data);\n    }\n};\n\nfunction applyRule(userRoles, ruleObj, obj) {\n    if (_.isArray(ruleObj)) {\n        return _.intersection(userRoles, ruleObj).length !== 0;\n    }    \n    if (_.intersection(ruleObj.applyForRoles, userRoles).length !== 0) {\n        ruleFunctions[ruleObj.type](obj, ruleObj.data);\n    }\n    return true;\n}\n\nmodule.exports = _module = {\n    parse: parse\n};\n"]}